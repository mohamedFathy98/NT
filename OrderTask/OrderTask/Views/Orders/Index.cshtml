@model MvcPageList<Order>

@{
    ViewData["Title"] = "Orders";
}

<h2>Orders</h2>

<div class="row">
    <div class="col-md-6">
        <form class="d-flex" asp-action="Index" asp-controller="Orders">
            <input name="searchString" class="form-control me-1" type="search" placeholder="Search Orders" aria-label="Search Orders" />
            <button class="btn btn-outline-success" type="submit">Search</button>
        </form>
    </div>
    <div class="col-md-6">
        <a asp-action="index" class="btn btn-outline-success">back to Full list</a>
    </div>
</div>

<p>
    <a asp-action="Create" class="btn btn-success">Create New Order</a>
</p>

<table class="table table-striped table-bordered">
    <thead class="thead-dark">
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Address</th>
            <th>Governorate</th>
            <th>City</th>
            <th>Products</th>
            <th>Created At</th>
            <th>Created By</th>
        </tr>
    </thead>
    <tbody>
        @if (Model?.Items != null && Model.Items.Any())
        {
            foreach (var order in Model.Items)
            {
                <tr>
                    <td>@order.Id</td>
                    <td>@order.Name</td>
                    <td>@order.Address</td>
                    <td>@order.Governorate?.Name</td>
                    <td>@order.City?.Name</td>
                    <td>
                        @if (order.ProductOrders != null)
                        {
                            foreach (var op in order.ProductOrders)
                            {
                                <span>
                                    @op.Product?.Name (ID: @op.ProductId, Price: @(op.Product?.Price.ToString("C")), Quantity: @op.Quantity)
                                    <br />
                                </span>
                            }
                        }
                    </td>
                    <td>@order.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>
                    <td>@order.CreatedBy</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="8">No orders found.</td>
            </tr>
        }
    </tbody>
</table>

@{
    // Calculate the start and end page numbers for pagination
    int startPage = Model.PageIndex - 2;
    int endPage = Model.PageIndex + 2;

    if (startPage < 1)
    {
        endPage += (1 - startPage);
        startPage = 1;
    }
    if (endPage > Model.TotalPages)
    {
        startPage -= (endPage - Model.TotalPages);
        endPage = Model.TotalPages;
    }
    if (startPage < 1) startPage = 1;
}
<div class="row justify-content-center">
    <div>
        <nav>
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "" )">
                    <a class="page-link text-black" asp-route-pageNumber="1">
                        <span>First</span>
                    </a>
                </li>
                <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link text-black" asp-route-pageNumber="@(Model.PageIndex - 1)">
                        <span>Previous</span>
                    </a>
                </li>
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                        <a class="page-link text-black" asp-route-pageNumber="@i">
                            <span>@i</span>
                        </a>
                    </li>
                }
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link text-black" asp-route-pageNumber="@(Model.PageIndex + 1)">
                        <span>Next</span>
                    </a>
                </li>
                <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "" )">
                    <a class="page-link text-black" asp-route-pageNumber="@Model.TotalPages">
                        <span>Last</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>

@section Scripts {
    <style>
        .custom-select {
            border-right: none;
        }

        .input-group .form-control:focus {
            border-color: #80bdff;
            box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
        }

        .input-group-append .btn {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
    </style>
}
