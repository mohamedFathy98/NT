@model OrderTask.ViewModel.ProductOrderViewModel

<h2 class="mb-4">Create Order</h2>

<form asp-action="Create" method="post" class="p-4 border rounded bg-light">
    <div class="form-group mb-3">
        <label asp-for="Order.Name" class="control-label"></label>
        <input asp-for="Order.Name" class="form-control" />
        <span asp-validation-for="Order.Name" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="Order.Address" class="control-label"></label>
        <input asp-for="Order.Address" class="form-control" />
        <span asp-validation-for="Order.Address" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="Order.GovernorateId" class="control-label"></label>
        <select asp-for="Order.GovernorateId" class="form-control">
            <option value="">Select a Governorate</option>
            @foreach (var gov in Model.Governorates)
            {
                <option value="@gov.Id">@gov.Name</option>
            }
        </select>
        <span asp-validation-for="Order.GovernorateId" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="Order.CityId" class="control-label"></label>
        <select asp-for="Order.CityId" class="form-control">
            <option value="">Select a City</option>
            @foreach (var city in Model.Cities)
            {
                <option value="@city.Id">@city.Name</option>
            }
        </select>
        <span asp-validation-for="Order.CityId" class="text-danger"></span>
    </div>

    <!-- Product selection and quantity -->
    <div class="form-group mb-3">
        <label class="control-label mb-2">Products</label>
        <div id="products-container">
            <div class="product-row mb-2 d-flex align-items-center">
                <select name="ProductQuantities[0].Key" class="form-control d-inline-block w-auto me-2" style="width: 250px;" required>
                    <option value="">Select a Product</option>
                    @foreach (var product in Model.Products)
                    {
                        <option value="@product.Id">@product.Name (Price: @product.Price.ToString("C"))</option>
                    }
                </select>
                <input type="number" name="ProductQuantities[0].Value" min="1" value="1" class="form-control d-inline-block w-auto me-2" style="width: 80px;" required />
                <button type="button" class="btn btn-danger btn-remove-product">Remove</button>
            </div>
        </div>
        <button type="button" id="add-product-btn" class="btn btn-primary mt-2">Add Product</button>
    </div>

    <div class="form-group mt-4">
        <button type="submit" class="btn btn-success me-2">Submit</button>
        <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
    </div>
</form>

@section Scripts {
    <script>
        let productIndex = 1;
        const products = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Products));

        // Remove button handler (prevents removing last row)
        document.getElementById('products-container').addEventListener('click', function (e) {
            if (e.target && e.target.classList.contains('btn-remove-product')) {
                const container = document.getElementById('products-container');
                const rows = container.querySelectorAll('.product-row');
                if (rows.length > 1) {
                    const row = e.target.closest('.product-row');
                    if (row) {
                        row.remove();
                    }
                }
            }
        });

        // Add product row handler
        document.getElementById('add-product-btn').addEventListener('click', function () {
            const container = document.getElementById('products-container');
            const row = document.createElement('div');
            row.className = 'product-row mb-2 d-flex align-items-center';

            // Create select
            const select = document.createElement('select');
            select.name = `ProductQuantities[${productIndex}].Key`;
            select.className = 'form-control d-inline-block w-auto me-2';
            select.style.width = '250px';
            select.required = true;

            const defaultOption = document.createElement('option');
            defaultOption.value = '';
            defaultOption.text = 'Select a Product';
            select.appendChild(defaultOption);

            products.forEach(function (product) {
                const option = document.createElement('option');
                option.value = product.Id;
                option.text = `${product.Name} (Price: ${product.Price.toLocaleString('en-US', { style: 'currency', currency: 'USD' })})`;
                select.appendChild(option);
            });

            // Create quantity input
            const quantity = document.createElement('input');
            quantity.type = 'number';
            quantity.name = `ProductQuantities[${productIndex}].Value`;
            quantity.min = '1';
            quantity.value = '1';
            quantity.className = 'form-control d-inline-block w-auto me-2';
            quantity.style.width = '80px';
            quantity.required = true;

            // Create remove button
            const removeBtn = document.createElement('button');
            removeBtn.type = 'button';
            removeBtn.className = 'btn btn-danger btn-remove-product';
            removeBtn.textContent = 'Remove';

            row.appendChild(select);
            row.appendChild(quantity);
            row.appendChild(removeBtn);

            container.appendChild(row);
            productIndex++;
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
