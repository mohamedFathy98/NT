@model Order

<h2>Create New Order</h2>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Address" class="control-label"></label>
        <input asp-for="Address" class="form-control" />
        <span asp-validation-for="Address" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="GovernorateId" class="control-label"></label>
        <select asp-for="GovernorateId" asp-items="ViewBag.Governorates" class="form-control">
            <option value="">Select a Governorate</option>
        </select>
        <span asp-validation-for="GovernorateId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="CityId" class="control-label"></label>
        <select asp-for="CityId" asp-items="ViewBag.Cities" class="form-control">
            <option value="">Select a City</option>
        </select>
        <span asp-validation-for="CityId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label class="control-label">Products</label>
        <div id="products-container">
            <div class="product-row mb-2">
                <select name="ProductOrders[0].ProductId" class="form-control d-inline-block w-auto" style="width: 250px;">
                    <option value="">Select a Product</option>
                    @foreach (var product in ViewBag.Products as List<Product>)
                    {
                        <option value="@product.Id">@product.Name (Price: @product.Price.ToString("C"))</option>
                    }
                </select>
                <input type="number" name="ProductOrders[0].Quantity" min="1" value="1" class="form-control d-inline-block w-auto ml-2" style="width: 80px;" />
            </div>
        </div>
        <button type="button" id="add-product-btn" class="btn btn-secondary mt-2">Add Product</button>
    </div>

    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script>
        let productIndex = 1;
        const products = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Products));

        document.getElementById('add-product-btn').addEventListener('click', function () {
            const container = document.getElementById('products-container');
            const row = document.createElement('div');
            row.className = 'product-row mb-2';

            // Create select
            const select = document.createElement('select');
            select.name = `ProductOrders[${productIndex}].ProductId`;
            select.className = 'form-control d-inline-block w-auto';
            select.style.width = '250px';

            const defaultOption = document.createElement('option');
            defaultOption.value = '';
            defaultOption.text = 'Select a Product';
            select.appendChild(defaultOption);

            products.forEach(function (product) {
                const option = document.createElement('option');
                option.value = product.Id;
                option.text = `${product.Name} (Price: ${product.Price.toLocaleString('en-US', { style: 'currency', currency: 'USD' })})`;
                select.appendChild(option);
            });

            // Create quantity input
            const quantity = document.createElement('input');
            quantity.type = 'number';
            quantity.name = `ProductOrders[${productIndex}].Quantity`;
            quantity.min = '1';
            quantity.value = '1';
            quantity.className = 'form-control d-inline-block w-auto ml-2';
            quantity.style.width = '80px';

            row.appendChild(select);
            row.appendChild(quantity);

            container.appendChild(row);
            productIndex++;
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}